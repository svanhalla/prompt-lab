name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: make deps
    
    - name: Validate API documentation
      run: make docs
    
    - name: Run linters
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.4.0
        args: --timeout=5m
    
    - name: Run tests with coverage
      run: make cover
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: make build
    
    - name: Run smoke tests
      run: make smoke-test
    
    - name: Run runtime verification
      run: make runtime-verify
    
    - name: Run e2e tests
      run: make e2e-test

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
    
    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 make build
        mv greetd greetd-linux-amd64
        
        GOOS=darwin GOARCH=amd64 make build
        mv greetd greetd-darwin-amd64
        
        GOOS=windows GOARCH=amd64 make build
        mv greetd greetd-windows-amd64.exe
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: greetd-*

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        make docker-build
        docker tag greetd:$VERSION greetd:dev
    
    - name: Test Docker image
      run: |
        docker run --rm greetd:dev ./greetd version
        docker run --rm greetd:dev ./greetd health
